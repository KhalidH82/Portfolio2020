{"version":3,"sources":["images/goatscreen.png","images/travelscreen.jpg","images/beatboxscreen.png","images/travelbudzscreen.png","images/cbdscreen.jpg","images/praizorscreen.jpg","images/marblescreen.jpg","images/mercerscreen.jpg","components/Nav.js","components/ProjectList.js","components/Projects.js","components/AboutMe.js","components/HeroMain.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","role","aria-label","src","width","height","to","ProjectList","props","image","name","href","gitHub","size","website","Projects","useState","Goat","webSite","TravelDash","BeatBox","TravelBudz","projects","CbdNetwork","Praizor","Marble","Mercer","clientProjects","projectList","map","project","console","log","key","clientProjectList","AboutMe","HeroMain","show","setShow","style","backgroundColor","fontSize","onClick","Resume","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff1f538b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goatscreen.53d877e1.png\";","module.exports = __webpack_public_path__ + \"static/media/travelscreen.2b18260a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beatboxscreen.e3553f16.png\";","module.exports = __webpack_public_path__ + \"static/media/travelbudzscreen.a5dbca49.png\";","module.exports = __webpack_public_path__ + \"static/media/cbdscreen.b9fb9eb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/praizorscreen.97ac0621.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marblescreen.6429a88f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mercerscreen.c49b63ed.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.sass\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\">\n          <img\n            src=\"https://pngimg.com/uploads/letter_k/letter_k_PNG16.png\"\n            width=\"112\"\n            height=\"28\"\n          />\n        </a>\n\n        <Link className=\"navbar-item\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\"navbar-item\" to=\"/aboutme\">\n          About Me\n        </Link>\n        {/* <Link className=\"navbar-item\">My Skills</Link> */}\n        <Link className=\"navbar-item\" to=\"/mywork\">\n          My Work\n        </Link>\n        <Link className=\"navbar-item\" to=\"/myresume\">\n          Resume\n        </Link>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport \"../App.sass\";\nimport {} from \"../index.css\";\n\nconst ProjectList = props => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img src={props.image} />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{props.name}</p>\n            <p className=\"subtitle is-6\">@khalidhosein</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <a href={props.gitHub}>\n            <ion-icon name=\"logo-github\" size=\"large\"></ion-icon>GitHub\n          </a>\n          <br />\n          <a href={props.website}>\n            <ion-icon name=\"desktop-outline\"></ion-icon>Website\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"../App.sass\";\nimport {} from \"../index.css\";\nimport ProjectList from \"./ProjectList\";\nimport Goat from \"../images/goatscreen.png\";\nimport TravelDash from \"../images/travelscreen.jpg\";\nimport BeatBox from \"../images/beatboxscreen.png\";\nimport TravelBudz from \"../images/travelbudzscreen.png\";\nimport CbdNetwork from \"../images/cbdscreen.jpg\";\nimport Praizor from \"../images/praizorscreen.jpg\";\nimport Marble from \"../images/marblescreen.jpg\";\nimport Mercer from \"../images/mercerscreen.jpg\";\n\nconst Projects = () => {\n  const [projects] = useState([\n    {\n      image: Goat,\n      name: \"Goat Herder\",\n      gitHub: \"https://github.com/KhalidH82/goatherder\",\n      webSite: \"https://khalidh82.github.io/goatherder/\"\n    },\n    {\n      //Fix Screen Image\n      image: TravelDash,\n      name: \"Travel Dash\",\n      gitHub: \"https://traveldash2.herokuapp.com/login\",\n      webSite: \"https://traveldash2.herokuapp.com/login\"\n    },\n    {\n      image: BeatBox,\n      name: \"Beat Box\",\n      gitHub: \"https://github.com/KhalidH82/BeatBox\"\n    },\n    {\n      image: TravelBudz,\n      name: \"Travel Budz\",\n      gitHub: \"https://github.com/KhalidH82/Travel-Budz\"\n    }\n  ]);\n  const [clientProjects] = useState([\n    {\n      image: CbdNetwork,\n      name: \"CBD Network\",\n      website: \"https://cbdnetwork.com/\"\n    },\n    {\n      //Fix Screen Image\n      image: Praizor,\n      name: \"Praizor\",\n      website: \"hhttps://praizor.com/\"\n    },\n    {\n      image: Marble,\n      name: \"Marble Downtown\",\n      website: \"https://www.marbledowntown.com/\"\n    },\n    {\n      image: Mercer,\n      name: \"The Mercer Club\",\n      website: \"https://themercerclubnyc.com/\"\n    }\n  ]);\n\n  let projectList = projects.map(project => {\n    console.log(project.name);\n    return (\n      <ProjectList\n        key={project.name}\n        image={project.image}\n        name={project.name}\n        gitHub={project.gitHub}\n      />\n    );\n  });\n  let clientProjectList = clientProjects.map(project => {\n    console.log(project.name);\n    return (\n      <ProjectList\n        key={project.name}\n        image={project.image}\n        name={project.name}\n        website={project.website}\n      />\n    );\n  });\n\n  return (\n    <div className=\"project-container\">\n      <div className=\"project-list\">\n        <h1 className=\"title has-text-centered\">Personal Projects</h1>\n        {projectList}\n      </div>\n      <div className=\"project-client\">\n        <h1 className=\"title has-text-centered\">Client Projects</h1>\n        {clientProjectList}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport \"../App.sass\";\n\nconst AboutMe = () => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">About Me</h1>\n        <h2 className=\"subtitle\">\n          I'm a dynamic full stack web developer with a passion for travel and\n          people. My life long journey of learning and exploring allows me to\n          connect to the world through technology. I’m confident and well versed\n          interacting with front and back end applications which are translated\n          using multiple programming languages and frameworks. My unique eye and\n          perspective is displayed when approaching problems and solving them\n          with a creative and articulate attitude inspired by those around me.\n        </h2>\n      </div>\n    </section>\n  );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport \"../App.sass\";\nimport {} from \"../index.css\";\n\nimport Projects from \"./Projects\";\nimport AboutMe from \"../components/AboutMe\";\n\nconst HeroMain = () => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => {\n    console.log(\"hi\");\n    setShow(true);\n    if (!show) {\n      return <AboutMe />;\n    } else {\n      console.log(\"hello\");\n    }\n  };\n\n  return (\n    <section className=\"hero is-medium\" style={{ backgroundColor: \"#242424\" }}>\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\" style={{ fontSize: \"40px\" }}>\n            <span className=\"special-text\">K</span>halid\n            <span className=\"special-text\">H</span>osein\n          </h1>\n          <h2 className=\"subtitle\" style={{ fontSize: \"30px\" }}>\n            Web Developer, Coder, Jet Setter, Food Enthusiast\n          </h2>\n          <Link to=\"/mywork\">\n            <button className=\"button is-rounded\" onClick={handleClick}>\n              View my Work\n            </button>\n          </Link>\n          <div className=\"btn-container\">\n            <a className=\"social-btn\" href=\"mailto:khalid.hosein9@gmail.com\">\n              <ion-icon name=\"logo-google\" size=\"large\"></ion-icon>\n            </a>\n            <a\n              className=\"social-btn\"\n              href=\"https://www.linkedin.com/in/khalid-hosein/\"\n            >\n              <ion-icon name=\"logo-linkedin\" size=\"large\"></ion-icon>\n            </a>\n            <a className=\"social-btn\" href=\"https://github.com/KhalidH82\">\n              <ion-icon name=\"logo-github\" size=\"large\"></ion-icon>\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroMain;\n","import React from \"react\";\n\nconst Resume = () => {\n  return <a href=\"../images/KhalidHosein2020.pdf\"></a>;\n};\n\nexport default Resume;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport HeroMain from \"./components/HeroMain\";\nimport AboutMe from \"./components/AboutMe\";\n// import MySkills from \"./MySkills\";\nimport Projects from \"./components/Projects\";\nimport Resume from \"./components/Resume\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Nav />\n          <HeroMain />\n        </Route>\n        <Route path=\"/aboutme\">\n          <Nav />\n          <AboutMe />\n        </Route>\n        {/* <Route path=\"/myskills\">\n          <MySkills />\n        </Route> */}\n        <Route path=\"/mywork\">\n          <Nav />\n          <Projects />\n        </Route>\n        <Route path=\"/myresume\">\n          <Nav />\n          <Resume />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}